{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","components/HarryPotter.jpg","components/RenderStaffItem.js","components/StaffComponent.js","components/StaffdetailComponent.js","components/DepartmentComponent.js","components/StaffInDepartment.js","components/SalaryComponent.js","components/FooterComponent.js","redux/ActionTypes.js","shared/baseUrl.js","redux/ActionCreators.js","components/MainComponent.js","redux/staffs.js","redux/departments.js","redux/form.js","redux/staffsSalary.js","App.js","redux/configureStore.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isNavOpen","toggleNav","bind","this","setState","Fragment","dark","expand","className","onClick","href","aria-hidden","isOpen","navbar","to","Component","Loading","required","val","length","maxLength","len","positiveValue","Number","isNumber","isNaN","compareCurrentDate","currentDate","Date","val_parts","String","split","val_date","getTime","RenderStaffItem","isModalOpen","isDropdownOpen","toggleModal","toggleDropdown","values","departmentID","console","log","department","fetchUpdateStaffs","staff","id","name","doB","salaryScale","startDate","annualLeave","overTime","toggle","size","color","right","title","handleDelete","src","IMAGE","alt","model","onSubmit","handleModifyStaff","htmlFor","xs","md","text","placeholder","defaultValue","validators","minLength","show","messages","type","select","hidden","value","StaffList","sortOrder","findStaffName","handleSortChange","handleSortList","handleSearch","handleAddStaff","handleDeleteStaff","e","target","sortList","sort","a","b","at","localeCompare","event","findstaff","preventDefault","staffs","postStaff","resetStaffInforForm","window","confirm","fetchDelStaffs","slice","filter","toLowerCase","includes","staffList","map","resetStaffModifyForm","isLoading","errMess","onChange","innerRef","input","RenderStaff","in","transformProps","exitTransform","width","object","image","body","heading","dateFormat","startDay","StaffDetail","active","RenderDepartmentItem","numberOfStaff","Department","departmentList","departments","StaffInDepartment","staffInDepartmentList","staffindepartment","RenderSalaryItem","salaryItem","salary","toString","replace","Salary","salaryItemList","staffsSalary","Footer","ADD_STAFF","STAFFS_LOADING","STAFFS_FAILED","ADD_STAFFS","DEPARTMENTS_LOADING","DEPARTMENTS_FAILED","ADD_DEPARTMENTS","STAFFSSALARY_LOADING","STAFFSSALARY_FAILED","ADD_STAFFSSALARY","DELETE_STAFF","UPDATE_STAFF","baseUrl","delStaffs","ActionTypes","payload","updateStaffs","staffsLoading","staffsFailed","errmess","addStaffs","departmentsLoading","departmentsFailed","addDepartments","staffsSalaryLoading","staffsSalaryFailed","addStaffsSalary","Main","fetchStaffs","fetchDepartments","fetchStaffsSalary","classNames","timeout","location","exact","path","component","match","selectedStaff","parseInt","params","staffId","departmentId","selectedDepartment","key","withRouter","connect","dispatch","newStaff","toISOString","parseFloat","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","catch","message","alert","actions","reset","updateStaffData","Staffs","action","concat","Departments","ActionType","InitialStaffInfor","StaffsSalary","store","createStore","combineReducers","createForms","staffinfor","staffmodifyform","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61fd74ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"lg\" className=\"fixed-top\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto d-flex align-items-center\" href=\"/\">\r\n                            <span><i className=\"fa fa-id-card fa-2x\" aria-hidden=\"true\"></i></span>\r\n                            <h5 className='d-inline-block mb-0 mx-2'>Staff Management App</h5>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/staff\">\r\n                                        {/* 'fa' class: leave off any style classes from your icons, \r\n                                        initially set to default to the solid style (font-weight = 900) */}\r\n                                        <span className=\"fa fa-users fa-lg\"></span> Staff\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/department\">\r\n                                        <span className=\"fa fa-th fa-lg\"></span> Department\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/salary\">\r\n                                        <span className=\"fa fa-money fa-lg\"></span> Salary\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12 text-center\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p><b>Loading...</b></p>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/HarryPotter.81e9dbae.jpg\";","import React, { Component } from 'react';\r\nimport { Card, CardImg, CardTitle,\r\n    Label, Button, Col, Row,\r\n    Modal, ModalHeader, ModalBody,\r\n    DropdownToggle, DropdownMenu, DropdownItem, Dropdown} from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport IMAGE from './HarryPotter.jpg'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst positiveValue = (val) => !(val) || (Number(val) > 0);\r\nconst isNumber = (val) => !(val) || !isNaN(Number(val));\r\nconst compareCurrentDate = (val) => {\r\n    var currentDate = new Date();\r\n    var val_parts = String(val).split('-');\r\n    var val_date = new Date(val_parts[0], val_parts[1] - 1, val_parts[2]);\r\n    return(!(val) || (currentDate.getTime() > val_date.getTime()))\r\n}\r\n\r\nclass RenderStaffItem extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen: false,\r\n            isDropdownOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.toggleDropdown = this.toggleDropdown.bind(this);\r\n    }\r\n\r\n    toggleDropdown() {\r\n        this.setState({\r\n            isDropdownOpen: !this.state.isDropdownOpen\r\n        })\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleModifyStaff(values) {\r\n        console.log(values);\r\n        this.toggleModal();\r\n        let departmentID\r\n        switch (values.department) {\r\n            case \"Sale\":\r\n                departmentID = \"Dept01\";\r\n                break;\r\n            case \"HR\":\r\n                departmentID = \"Dept02\";\r\n                break;\r\n            case \"Marketing\":\r\n                departmentID = \"Dept03\";\r\n                break;\r\n            case \"IT\":\r\n                departmentID = \"Dept04\";\r\n                break;\r\n            case \"Finance\":\r\n                departmentID = \"Dept05\";\r\n                break;\r\n        }\r\n        this.props.fetchUpdateStaffs(this.props.staff.id, values.name, values.doB, Number(values.salaryScale), values.startDate, departmentID , Number(values.annualLeave), Number(values.overTime))\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <div className='position-relative'>\r\n                    <Dropdown isOpen={this.state.isDropdownOpen} toggle={this.toggleDropdown} className=\"dropdown\" size=\"sm\">\r\n                        <DropdownToggle color=\"success\"><i className=\"fa fa-align-justify\" aria-hidden=\"true\"></i></DropdownToggle>\r\n                        <DropdownMenu right className=\"py-0\">\r\n                            <DropdownItem className=\"p-0 text-center\" title=\"Modify\" onClick={this.toggleModal}>\r\n                                <div className='bg-warning'>\r\n                                    <i className=\"fa fa-pencil fa-2x\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </DropdownItem>\r\n                            <DropdownItem className=\"p-0 text-center\" title=\"Delete\" onClick={() => this.props.handleDelete(this.props.staff.id)}>\r\n                                <div className='bg-danger'>\r\n                                    <i className=\"fa fa-times fa-2x\" aria-hidden=\"true\"></i>\r\n                                </div>\r\n                            </DropdownItem>\r\n                        </DropdownMenu>\r\n                    </Dropdown>\r\n                    <Link to={`/staff/${this.props.staff.id}`}>\r\n                        <Card className=\"text-center\">\r\n                            <CardImg src={IMAGE} alt={this.props.staff.name}/>\r\n                            <CardTitle className=\"mt-2\">{this.props.staff.name}</CardTitle>\r\n                        </Card>\r\n                    </Link>\r\n                </div>\r\n                <Modal\r\n                    isOpen={this.state.isModalOpen}\r\n                    toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>\r\n                        Modify Staff\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <Form model='staffmodifyform' onSubmit={(values) => {this.handleModifyStaff(values)}}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" xs={4} md={3}>Name:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        placeholder={this.props.staff.name}\r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(20)\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Name should not be empty.',\r\n                                            minLength: ' Name must be greater than 2 characters.',\r\n                                            maxLength: ' Name must be less than 20 characters.'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"doB\" xs={4} md={3}>Day of Birth:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control type=\"date\" model=\".doB\" id=\"doB\" name=\"doB\" \r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, compareCurrentDate\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".doB\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Day of birth should not be empty.',\r\n                                            compareCurrentDate: ' Day of birth should be smaller than current day.'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"startDate\" xs={4} md={3}>Start Date:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control type=\"date\" model=\".startDate\" id=\"startDate\" name=\"startDate\" \r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, compareCurrentDate\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".startDate\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Start Day should not be empty.',\r\n                                            compareCurrentDate: 'Start Day should be smaller than Current Day.'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"department\" xs={4} md={3}>Department:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control.select model=\".department\" id=\"department\" name=\"department\"\r\n                                        className=\"form-select\"\r\n                                        validators={{\r\n                                            required\r\n                                        }} >\r\n                                        <option defaultValue hidden>--Department--</option>\r\n                                        <option>Sale</option>\r\n                                        <option>HR</option>\r\n                                        <option>Marketing</option>\r\n                                        <option>IT</option>\r\n                                        <option>Finance</option>\r\n                                    </Control.select>\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".department\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Please choose one from departments above.',\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"salaryScale\" xs={4} md={3}>Salary Scale:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control.text model=\".salaryScale\" id=\"salaryScale\" name=\"salaryScale\"\r\n                                        placeholder={this.props.staff.salaryScale}\r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, positiveValue, isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".salaryScale\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: ' Salary Scale should not be empty.',\r\n                                            positiveValue: ' Salary Scale should be positive.',\r\n                                            isNumber : ' Salary Scale should be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"annualLeave\" xs={4} md={3}>Annual Leave:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control.text model=\".annualLeave\" id=\"annualLeave\" name=\"annualLeave\"\r\n                                        placeholder={this.props.staff.annualLeave}\r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, positiveValue, isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".annualLeave\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: ' Annual Leave should not be empty.',\r\n                                            positiveValue: ' Salary Scale should be positive.',\r\n                                            isNumber : ' Salary Scale should be a number'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"overTime\" xs={4} md={3}>Over Time:</Label>\r\n                                <Col xs={8} md={9}>\r\n                                    <Control.text model=\".overTime\" id=\"overTime\" name=\"overTime\"\r\n                                        placeholder={this.props.staff.overTime}\r\n                                        defaultValue=\"\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, positiveValue, isNumber\r\n                                        }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".overTime\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: ' Over Time should not be empty.',\r\n                                            positiveValue: ' Salary Scale should be positive.',\r\n                                            isNumber : ' Salary Scale should be a number.'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group w-25 mx-auto my-1\">\r\n                                <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                    <b>MODIFY STAFF</b>\r\n                                </Button>\r\n                            </Row>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RenderStaffItem;","import React, { Component } from 'react';\r\nimport { Label, Button, Col, Row,\r\n    Input,Modal, ModalHeader, ModalBody} from 'reactstrap';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport RenderStaffItem from './RenderStaffItem';\r\n\r\n// For validate form purpose\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => !(val) || (val.length >= len);\r\nconst positiveValue = (val) => !(val) || (Number(val) > 0);\r\nconst isNumber = (val) => !(val) || !isNaN(Number(val));\r\n// const compareAge = (val) => {\r\n//     var currentDate = new Date();\r\n//     var val_parts = String(val).split('-');\r\n//     var val_date = new Date(val_parts[0], val_parts[1] - 1, val_parts[2]);\r\n//     return(!(val) || (currentDate.getFullYear() - val_date.getFullYear() > 18))\r\n// }\r\nconst compareCurrentDate = (val) => {\r\n    var currentDate = new Date();\r\n    var val_parts = String(val).split('-');\r\n    var val_date = new Date(val_parts[0], val_parts[1] - 1, val_parts[2]);\r\n    return(!(val) || (currentDate.getTime() > val_date.getTime()))\r\n}\r\n\r\nclass StaffList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            sortOrder: 'nameAscending',\r\n            findStaffName: '',\r\n            isModalOpen: false\r\n        };\r\n        this.handleSortChange = this.handleSortChange.bind(this);\r\n        this.handleSortList = this.handleSortList.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleAddStaff = this.handleAddStaff.bind(this);\r\n        this.handleDeleteStaff = this.handleDeleteStaff.bind(this);\r\n\r\n    }\r\n\r\n    handleSortChange(e) {\r\n        this.setState({ sortOrder: e.target.value });\r\n    }\r\n\r\n    handleSortList(sortList) {\r\n        if (this.state.sortOrder === 'nameAscending') {\r\n            return (\r\n                sortList.sort((a, b) => {\r\n                    return a.name.split(' ').at(-1).localeCompare(b.name.split(' ').at(-1), 'vi');\r\n                })\r\n            )\r\n        } else {\r\n            return(\r\n                sortList.sort((a, b) => {\r\n                    return b.name.split(' ').at(-1).localeCompare(a.name.split(' ').at(-1), 'vi');\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    handleSearch(event) {\r\n        this.setState({\r\n            findStaffName: this.findstaff.value,\r\n        });\r\n        event.preventDefault();\r\n    }\r\n\r\n    // ToggleModal\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n        });\r\n    }\r\n\r\n    // Button AddStaff => submit new staff's infor\r\n    handleAddStaff(values) {\r\n        console.log(this.props.staffs.staffs.length)\r\n        this.toggleModal();\r\n        let departmentID\r\n        switch (values.department) {\r\n            case \"Sale\":\r\n                departmentID = \"Dept01\";\r\n                break;\r\n            case \"HR\":\r\n                departmentID = \"Dept02\";\r\n                break;\r\n            case \"Marketing\":\r\n                departmentID = \"Dept03\";\r\n                break;\r\n            case \"IT\":\r\n                departmentID = \"Dept04\";\r\n                break;\r\n            case \"Finance\":\r\n                departmentID = \"Dept05\";\r\n                break;\r\n        }\r\n        this.props.postStaff(values.name, values.doB , Number(values.salaryScale), values.startDate, departmentID , Number(values.annualLeave), Number(values.overTime));\r\n        this.props.resetStaffInforForm();\r\n    }\r\n\r\n    handleDeleteStaff(id) {\r\n        if (window.confirm('Are you sure you want to delete this Staff')) {\r\n            this.props.fetchDelStaffs(id);\r\n            console.log('Staff was deleted to the database.');\r\n        } else {\r\n            // Do nothing!\r\n            console.log('Staff was not deleted to the database.');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        var sortList = this.handleSortList(this.props.staffs.staffs.slice());\r\n\r\n        // Find Staff\r\n        if (this.state.findStaffName !== '') {\r\n            sortList = sortList.filter((staff) =>\r\n                staff.name.toLowerCase().includes(this.state.findStaffName.toLowerCase())\r\n            );\r\n        }\r\n\r\n        const staffList = sortList.map((staff) => {\r\n            return (\r\n                <div\r\n                    key={staff.id}\r\n                    className=\"col-6 col-sm-4 col-lg-2 my-2 p-2\">\r\n                    <RenderStaffItem \r\n                        staff={staff} \r\n                        handleDelete={this.handleDeleteStaff}\r\n                        resetStaffModifyForm={this.props.resetStaffModifyForm}\r\n                        fetchUpdateStaffs={this.props.fetchUpdateStaffs}\r\n                    />\r\n                    \r\n                </div>\r\n            );\r\n        });\r\n\r\n        if (this.props.staffs.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.props.staffs.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <h3>{this.props.staffs.errMess}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mt-2\">\r\n                            <h3>Staff</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row d-flex align-items-center\">\r\n                        <div className=\"col-12 col-sm-12 col-lg-4 d-flex align-items-center\">\r\n                            <span>\r\n                                <i>SortStaff:</i>\r\n                            </span>\r\n                            <select\r\n                                onChange={this.handleSortChange}\r\n                                className=\"mx-2\">\r\n                                <option defaultValue hidden>\r\n                                    Sort by\r\n                                </option>\r\n                                <option value=\"nameAscending\">\r\n                                    Name: Ascending\r\n                                </option>\r\n                                <option value=\"nameDescending\">\r\n                                    Name: Descending\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-12 col-sm-8 col-lg-5 my-2\">\r\n                            <div>\r\n                                <Label htmlFor=\"findstaff\">\r\n                                    <i>FindStaff:</i>\r\n                                </Label>\r\n                                <div className='d-inline-block'>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"findstaff\"\r\n                                        name=\"findstaff\"\r\n                                        className=\"w-75 d-inline-block mx-1\"\r\n                                        innerRef={(input) =>\r\n                                            (this.findstaff = input)\r\n                                        }\r\n                                    />\r\n                                    <Button type=\"button\" value=\"button\" color=\"primary\"\r\n                                        className=\"px-2 mb-1 mx-2\"\r\n                                        onClick={this.handleSearch}>\r\n                                        <span className=\"fa fa-search fa-lg\"></span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-sm-4 col-lg-3 d-flex justifycontentend\">\r\n                            <Button\r\n                                onClick={this.toggleModal}\r\n                                color=\"primary\"\r\n                                className=\"mb-1 mx-2\">\r\n                                <span className=\"fa fa-plus fa-lg\"></span>{' '}\r\n                                <b>ADD STAFF</b>\r\n                            </Button>\r\n                            \r\n                        </div>\r\n                    </div>\r\n    \r\n                    {/* ADD STAFF MODAL */}\r\n    \r\n                    <Modal\r\n                        isOpen={this.state.isModalOpen}\r\n                        toggle={this.toggleModal}>\r\n                        <ModalHeader toggle={this.toggleModal}>\r\n                            Add Staff\r\n                        </ModalHeader>\r\n                        <ModalBody>\r\n                            <Form model='staffinfor' onSubmit={(values) => {this.handleAddStaff(values)}}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"name\" xs={4} md={3}>Name:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(20)\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".name\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Name should not be empty.',\r\n                                                minLength: ' Name must be greater than 2 characters.',\r\n                                                maxLength: ' Name must be less than 20 characters.'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"doB\" xs={4} md={3}>Day of Birth:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control type=\"date\" model=\".doB\" id=\"doB\" name=\"doB\" \r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, compareCurrentDate\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".doB\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Day of birth should not be empty.',\r\n                                                compareCurrentDate: ' Day of birth should be smaller than current day.'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"startDate\" xs={4} md={3}>Start Date:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control type=\"date\" model=\".startDate\" id=\"startDate\" name=\"startDate\" \r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, compareCurrentDate\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".startDate\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Start Day should not be empty.',\r\n                                                compareCurrentDate: 'Start Day should be smaller than Current Day.'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"department\" xs={4} md={3}>Department:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control.select model=\".department\" id=\"department\" name=\"department\"\r\n                                            className=\"form-select\"\r\n                                            validators={{\r\n                                                required\r\n                                            }} >\r\n                                            <option defaultValue hidden>--Department--</option>\r\n                                            <option>Sale</option>\r\n                                            <option>HR</option>\r\n                                            <option>Marketing</option>\r\n                                            <option>IT</option>\r\n                                            <option>Finance</option>\r\n                                        </Control.select>\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".department\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: 'Please choose one from departments above.',\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"salaryScale\" xs={4} md={3}>Salary Scale:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control.text model=\".salaryScale\" id=\"salaryScale\" name=\"salaryScale\"\r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, positiveValue, isNumber\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".salaryScale\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: ' Salary Scale should not be empty.',\r\n                                                positiveValue: ' Salary Scale should be positive.',\r\n                                                isNumber : ' Salary Scale should be a number'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"annualLeave\" xs={4} md={3}>Annual Leave:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control.text model=\".annualLeave\" id=\"annualLeave\" name=\"annualLeave\"\r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, positiveValue, isNumber\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".annualLeave\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: ' Annual Leave should not be empty.',\r\n                                                positiveValue: ' Salary Scale should be positive.',\r\n                                                isNumber : ' Salary Scale should be a number'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label htmlFor=\"overTime\" xs={4} md={3}>Over Time:</Label>\r\n                                    <Col xs={8} md={9}>\r\n                                        <Control.text model=\".overTime\" id=\"overTime\" name=\"overTime\"\r\n                                            defaultValue=\"\"\r\n                                            className=\"form-control\"\r\n                                            validators={{\r\n                                                required, positiveValue, isNumber\r\n                                            }} />\r\n                                        <Errors\r\n                                            className=\"text-danger\"\r\n                                            model=\".overTime\"\r\n                                            show=\"touched\"\r\n                                            messages={{\r\n                                                required: ' Over Time should not be empty.',\r\n                                                positiveValue: ' Salary Scale should be positive.',\r\n                                                isNumber : ' Salary Scale should be a number.'\r\n                                            }}\r\n                                        />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group w-25 mx-auto my-1\">\r\n                                    <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                                        <b>ADD STAFF</b>\r\n                                    </Button>\r\n                                </Row>\r\n                            </Form>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                    <hr />\r\n                    <h5>Number of Staff(s): {staffList.length}</h5>\r\n                    <div className=\"row\">{staffList}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default StaffList;\r\n","import React from 'react';\r\nimport { Media, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport dateFormat from 'dateformat'\r\nimport { Loading } from './LoadingComponent';\r\nimport { FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderStaff({ staff, department }) {\r\n    return(\r\n        <Media className=\"mb-3\">\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.1) translateY(-50%)'\r\n                }}>\r\n                <div className=\"col-12 col-sm-3 col-md-4 d-inline-block position-relative align-top m-0\">\r\n                    <Media>\r\n                        <Media width=\"100%\" object src={staff.image} alt={staff.name} className=\"top mx-auto text-center\"></Media>\r\n                    </Media>\r\n                </div>\r\n                <div className=\"col-12 col-sm-9 col-md-8 d-inline-block px-3 pt-2 m-0\">\r\n                    <Media body>\r\n                        <Media heading>{staff.name}</Media>\r\n                        <p>Day of Birth: {dateFormat(staff.doB, \"dd, mm, yyyy\")}</p>\r\n                        <p>Start Day: {dateFormat(staff.startDay, \"dd, mm, yyyy\")}</p>\r\n                        <p>Department: {department.name}</p>\r\n                        <p>Annual Leave: {staff.annualLeave}</p>\r\n                        <p>Over Time: {staff.overTime}</p>\r\n                    </Media>\r\n                </div>\r\n            </FadeTransform>\r\n        </Media>\r\n    )\r\n}\r\n\r\nconst StaffDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row height-void\"></div>\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.errMess) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row height-void\"></div>\r\n                <div className=\"row\">\r\n                    <h3>{props.errMess}</h3>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.staff != null) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row height-void\"></div>\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/staff\">Staff</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.staff.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.staff.name}</h3>\r\n                        <hr />\r\n                    </div>                \r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderStaff staff={props.staff} department={props.department}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>Click on staff to see their information</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StaffDetail","import React from \"react\";\r\nimport { Card, CardText, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\n\r\nfunction RenderDepartmentItem({department}) {\r\n    return(\r\n        <Link to={`/department/${department.id}`}>\r\n            <Card>\r\n                <CardTitle className=\"m-2\">{department.name}</CardTitle>\r\n                <CardText className=\"py-3 offset-1\">Number of Staffs: <i>{department.numberOfStaff}</i></CardText>\r\n            </Card>\r\n        </Link>\r\n    );\r\n}\r\n\r\nconst Department = (props) => {\r\n    const departmentList = props.departments.departments.map((department) => {\r\n        return(\r\n            <div key={department.id} className=\"col-12 col-sm-6 col-lg-4 p-2\">\r\n                <RenderDepartmentItem department={department} />\r\n            </div>\r\n        )\r\n    });\r\n\r\n    if (props.departments.isLoading) {\r\n        return(\r\n            <div className='container'>\r\n                <div className=\"row height-void\"></div>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.departments.errMess) {\r\n        return(\r\n            <div className='container'>\r\n                <div className=\"row height-void\"></div>\r\n                <div className='row'>\r\n                    <div className='col-12'>\r\n                        <h3>{props.departments.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div className=\"container mb-3\">\r\n                <div className=\"row height-void\"></div>\r\n                <div className=\"row mt-2\">\r\n                    <Breadcrumb className=\"mx-2\">\r\n                        <BreadcrumbItem><Link to=\"/staff\">Staff</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Department</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Department</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {departmentList}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Department","import React from 'react';\r\nimport { Card, CardImg, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Fade } from 'react-animation-components';\r\nimport IMAGE from './HarryPotter.jpg'\r\n\r\nconst StaffInDepartment = (props) => {\r\n\r\n    const staffInDepartmentList = props.staffindepartment.map((staff) => {\r\n        return(\r\n                <div\r\n                    key={staff.id}\r\n                    className=\"col-6 col-sm-4 col-lg-2 my-2 p-2\">\r\n                    <Fade in>\r\n                        <Card className=\"text-center\">\r\n                            <CardImg src={IMAGE} alt={staff.name}/>\r\n                            <CardTitle className=\"mt-2\">{staff.name}</CardTitle>\r\n                        </Card>\r\n                    </Fade>\r\n                </div>\r\n        )\r\n    })\r\n\r\n    if (props.department != null) {\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row height-void\"></div>\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/department\">Department</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.department.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.department.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {staffInDepartmentList}\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return(\r\n            <div>Click on staff to see their information</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StaffInDepartment","import React, { Component } from \"react\";\r\nimport { Card, CardTitle, CardText, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent'\r\nimport { FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderSalaryItem({salaryItem}) {\r\n    return(\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.1) translateY(-50%)'\r\n                }}>\r\n            <Card>\r\n                <CardTitle className=\"text-center mt-2 mb-0\">{salaryItem.name}</CardTitle>\r\n                <hr />\r\n                <CardText className=\"offset-1\">Staff ID: <i>{salaryItem.id}</i></CardText>\r\n                <CardText className=\"offset-1\">Salary Scale: <i>{salaryItem.salaryScale}</i></CardText>\r\n                <CardText className=\"offset-1\">Overtime: <i>{salaryItem.overTime}</i></CardText>\r\n                <div className=\"text-center border border-3 mx-4 mb-2\">\r\n                    <CardText className=\"py-1\">\r\n                        Salary: <i>{salaryItem.salary.toString().replace(/\\B(?<!\\.\\d*)(?=(\\d{3})+(?!\\d))/g, \",\")} VND</i>\r\n                    </CardText>\r\n                </div>\r\n            </Card>\r\n        </FadeTransform>\r\n    )\r\n}\r\n\r\nclass Salary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            sortOrder: \"idAscending\"\r\n        }\r\n        this.handleSortChange = this.handleSortChange.bind(this);\r\n        this.handleSortList = this.handleSortList.bind(this);\r\n    }\r\n\r\n    handleSortChange(e) {\r\n        this.setState({ sortOrder: e.target.value})\r\n    }\r\n\r\n    handleSortList(sortList) {\r\n        if (this.state.sortOrder === \"idAscending\") {\r\n            return sortList.sort((a,b) => (a.id > b.id) ? 1 : ((b.id > a.id) ? -1 : 0));\r\n        } else if (this.state.sortOrder === \"idDescending\") {\r\n            return sortList.sort((a,b) => (a.id < b.id) ? 1 : ((b.id < a.id) ? -1 : 0));\r\n        } else if (this.state.sortOrder === \"salaryAscending\"){\r\n            return sortList.sort((a,b) => (a.salary > b.salary) ? 1 : ((b.salary > a.salary) ? -1 : 0));\r\n        } else {\r\n            return sortList.sort((a,b) => (a.salary < b.salary) ? 1 : ((b.salary < a.salary) ? -1 : 0));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        // Use slice method for clone an array\r\n        var sortList = this.handleSortList(this.props.staffsSalary.staffsSalary.slice());\r\n        const salaryItemList = sortList.map((salaryItem) => {\r\n            return(\r\n                <div key={salaryItem.id} className=\"col-12 col-sm-6 col-lg-4 p-2\">\r\n                    <RenderSalaryItem salaryItem={salaryItem} />\r\n                </div>\r\n            );\r\n        })\r\n\r\n        if (this.props.staffsSalary.isLoading) {\r\n            return(\r\n                <div className='container'>\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className='row'>\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else if (this.props.staffsSalary.errMess) {\r\n            return(\r\n                <div className='container'>\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className='row'>\r\n                        <div className='col-12'>\r\n                            <h3>{this.props.staffsSalary.errMess}</h3>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        } else {\r\n            return(\r\n                <div className=\"container mb-3\">\r\n                    <div className=\"row height-void\"></div>\r\n                    <div className=\"row mt-2\">\r\n                        <Breadcrumb className=\"mx-2\">\r\n                            <BreadcrumbItem><Link to=\"/staff\">Staff</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Salary</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Salary</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <span><i>SortStaff: </i></span>\r\n                            <select onChange={this.handleSortChange} className=\"mb-2\">\r\n                                <option defaultValue hidden>Sort by</option>\r\n                                <option value=\"idAscending\">ID: Ascending</option>\r\n                                <option value=\"idDescending\">ID: Descending</option>\r\n                                <option value=\"salaryAscending\">Salary: Ascending</option>\r\n                                <option value=\"salaryDescending\">Salary: Descending</option>\r\n                            </select>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <h5>Number of Staff(s): {salaryItemList.length}</h5>\r\n                    <div className=\"row\">{salaryItemList}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Salary","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Footer(props) {\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-4 col-sm-2 pr-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><Link to=\"/staff\">Staff</Link></li>\r\n                            <li><Link to=\"/department\">Department</Link></li>\r\n                            <li><Link to=\"/salary\">Salary</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                            confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center my-2\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">             \r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2021 Staff Management Application</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer","export const ADD_STAFF = 'ADD_STAFF';\r\nexport const STAFFS_LOADING = 'STAFFS_LOADING';\r\nexport const STAFFS_FAILED = 'STAFFS_FAILED';\r\nexport const ADD_STAFFS = 'ADD_STAFFS';\r\nexport const DEPARTMENTS_LOADING = 'DEPARTMENTS_LOADING';\r\nexport const DEPARTMENTS_FAILED = 'DEPARTMENTS_FAILED';\r\nexport const ADD_DEPARTMENTS = 'ADD_DEPARTMENTS';\r\nexport const STAFFSSALARY_LOADING = 'STAFFSSALARY_LOADING';\r\nexport const STAFFSSALARY_FAILED = 'STAFFSSALARY_FAILED';\r\nexport const ADD_STAFFSSALARY = 'ADD_STAFFSSALARY';\r\n\r\nexport const DELETE_STAFF = 'DELETESTAFF'\r\nexport const UPDATE_STAFF = 'UPDATESTAFF'","export const baseUrl = 'https://rjs101xbackend.herokuapp.com/'","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\nexport const addStaff = (staff) => ({\r\n    type: ActionTypes.ADD_STAFF,\r\n    payload: staff\r\n});\r\n\r\n// POST\r\nexport const postStaff = (name, doB, salaryScale, startDate, departmentId, annualLeave, overTime) => (dispatch) => {\r\n    const newStaff = {\r\n        name: name,\r\n        doB: new Date(doB).toISOString(),\r\n        salaryScale: parseFloat(salaryScale),\r\n        startDate: new Date(startDate).toISOString(),\r\n        departmentId: departmentId,\r\n        annualLeave: parseFloat(annualLeave),\r\n        overTime: parseFloat(overTime),\r\n        image: \"/asset/images/alberto.png\",\r\n    }\r\n    return fetch(baseUrl + 'staffs', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newStaff),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error' + response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        console.log(response);\r\n        dispatch(addStaffs(response));\r\n        dispatch(addStaffsSalary(response));\r\n    })\r\n    .catch(error => {\r\n        console.log('post Staff', error.message); \r\n        alert('Your staff could not be posted\\nError: ' + error.message)\r\n    });\r\n}\r\n\r\n// DELETE\r\nexport const fetchDelStaffs = (id) => (dispatch) => {\r\n    return fetch(baseUrl + 'staffs/' + id, {\r\n        method: 'DELETE',\r\n        credentials: 'same-origin'\r\n    })\r\n        .then((response) => response.json())\r\n        .then((staffs) => dispatch(delStaffs(staffs)))\r\n}\r\n\r\nexport const delStaffs = (staffs) => ({\r\n    type: ActionTypes.DELETE_STAFF,\r\n    payload: staffs\r\n})\r\n\r\n// UPDATE\r\nexport const fetchUpdateStaffs = (id, name, doB, salaryScale, startDate, departmentId, annualLeave, overTime) => (dispatch) => {\r\n    const updateStaffData = {\r\n        id: id,\r\n        name: name,\r\n        doB: new Date(doB).toISOString(),\r\n        salaryScale: parseFloat(salaryScale),\r\n        startDate: new Date(startDate).toISOString(),\r\n        departmentId: departmentId,\r\n        annualLeave: parseFloat(annualLeave),\r\n        overTime: parseFloat(overTime),\r\n    }\r\n    return fetch(baseUrl + 'staffs', {\r\n        method: \"PATCH\",\r\n        body: JSON.stringify(updateStaffData),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n            return response;\r\n        } else {\r\n            var error = new Error('Error' + response.status + ': '+ response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => {\r\n        console.log(response);\r\n        dispatch(updateStaffs(response));\r\n        dispatch(addStaffsSalary(response));\r\n        alert(name + \" has been successfully updated!!!\");\r\n    })\r\n    .catch(error => {\r\n        console.log('Update Staff', error.message); \r\n        alert('Your staff could not be updated\\nError: ' + error.message)\r\n    });\r\n}\r\n\r\nexport const updateStaffs = (staffs) => ({\r\n    type: ActionTypes.UPDATE_STAFF,\r\n    payload: staffs\r\n})\r\n\r\n// fetchStaffs\r\nexport const fetchStaffs = () => (dispatch) => {\r\n    dispatch(staffsLoading(true));\r\n\r\n    return fetch(baseUrl + 'staffs')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(staffs => dispatch(addStaffs(staffs)))\r\n        .catch(error => dispatch(staffsFailed(error.message)))\r\n}\r\n\r\nexport const staffsLoading = () => ({\r\n    type: ActionTypes.STAFFS_LOADING\r\n});\r\n\r\nexport const staffsFailed = (errmess) => ({\r\n    type: ActionTypes.STAFFS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addStaffs = (staffs) => ({\r\n    type: ActionTypes.ADD_STAFFS,\r\n    payload: staffs\r\n})\r\n\r\n// fetchDepartments\r\nexport const fetchDepartments = () => (dispatch) => {\r\n    dispatch(departmentsLoading(true));\r\n\r\n    return fetch(baseUrl + 'departments')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(departments => dispatch(addDepartments(departments)))\r\n        .catch(error => dispatch(departmentsFailed(error.message)))\r\n}\r\n\r\nexport const departmentsLoading = () => ({\r\n    type: ActionTypes.DEPARTMENTS_LOADING\r\n});\r\n\r\nexport const departmentsFailed = (errmess) => ({\r\n    type: ActionTypes.DEPARTMENTS_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addDepartments = (departments) => ({\r\n    type: ActionTypes.ADD_DEPARTMENTS,\r\n    payload: departments\r\n})\r\n\r\n// fetchStaffsSalary\r\nexport const fetchStaffsSalary = () => (dispatch) => {\r\n    dispatch(staffsSalaryLoading(true));\r\n\r\n    return fetch(baseUrl + 'staffsSalary')\r\n        .then(response => {\r\n            if (response.ok) {\r\n                return response;\r\n            } else {\r\n                var error = new Error('Error' + response.status + ': ' + response.statusText)\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n        })\r\n        .then(response => response.json())\r\n        .then(staffsSalary => dispatch(addStaffsSalary(staffsSalary)))\r\n        .catch(error => dispatch(staffsSalaryFailed(error.message)))\r\n}\r\n\r\nexport const staffsSalaryLoading = () => ({\r\n    type: ActionTypes.STAFFSSALARY_LOADING\r\n});\r\n\r\nexport const staffsSalaryFailed = (errmess) => ({\r\n    type: ActionTypes.STAFFSSALARY_FAILED,\r\n    payload: errmess\r\n})\r\n\r\nexport const addStaffsSalary = (staffsSalary) => ({\r\n    type: ActionTypes.ADD_STAFFSSALARY,\r\n    payload: staffsSalary\r\n})","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport StaffList from './StaffComponent';\r\nimport StaffDetail from './StaffdetailComponent';\r\nimport Department from './DepartmentComponent';\r\nimport StaffInDepartment from './StaffInDepartment'\r\nimport Salary from './SalaryComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { postStaff, fetchStaffs, fetchDepartments, fetchStaffsSalary, fetchDelStaffs, fetchUpdateStaffs } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        staffs: state.staffs,\r\n        departments: state.departments,\r\n        staffsSalary: state.staffsSalary,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    postStaff: (name, doB, salaryScale, startDate, departmentId, annualLeave, overTime) => dispatch(postStaff(name, doB, salaryScale, startDate, departmentId, annualLeave, overTime)),\r\n    fetchStaffs: () => {dispatch(fetchStaffs())},\r\n    resetStaffInforForm: () => {dispatch(actions.reset('staffinfor'))},\r\n    resetStaffModifyForm: () => {dispatch(actions.reset('staffmodifyform'))},\r\n    fetchDepartments: () => {dispatch(fetchDepartments())},\r\n    fetchStaffsSalary: () => {dispatch(fetchStaffsSalary())},\r\n\r\n    fetchDelStaffs: (id) => (dispatch(fetchDelStaffs(id))),\r\n    fetchUpdateStaffs: (id, name, doB, salaryScale, startDate, departmentId, annualLeave, overTime) => dispatch(fetchUpdateStaffs(id, name, doB, salaryScale, startDate, departmentId, annualLeave, overTime)),\r\n});\r\n\r\nclass Main extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchStaffs();\r\n        this.props.fetchDepartments();\r\n        this.props.fetchStaffsSalary();\r\n    }\r\n\r\n    render() {\r\n\r\n        const HomePageStaffList = () => {\r\n            return(\r\n                <StaffList \r\n                    staffs={this.props.staffs}\r\n                    postStaff={this.props.postStaff}\r\n                    fetchDelStaffs={this.props.fetchDelStaffs}\r\n                    fetchUpdateStaffs={this.props.fetchUpdateStaffs}\r\n                    resetStaffInforForm={this.props.resetStaffInforForm}\r\n                    resetStaffModifyForm={this.props.resetStaffModifyForm}\r\n                />\r\n            )\r\n        };\r\n\r\n        const StaffWithId = ({match}) => {\r\n            var selectedStaff = this.props.staffs.staffs.filter((staff) => staff.id === parseInt(match.params.staffId,10))[0]\r\n            return(\r\n                <StaffDetail \r\n                    staff={selectedStaff} \r\n                    isLoading={this.props.staffs.isLoading}\r\n                    errMess={this.props.staffs.errMess}\r\n                    department={this.props.departments.departments.filter((department) => department.id === selectedStaff.departmentId)[0]}\r\n                />\r\n            )\r\n        };\r\n\r\n        const HomePageStaffInDepartment = ({match}) => {\r\n            var selectedDepartment = this.props.departments.departments.filter((department) => department.id === match.params.departmentId)[0]\r\n            return(\r\n                <StaffInDepartment \r\n                    staffindepartment = {this.props.staffs.staffs.filter(staff => staff.departmentId === selectedDepartment.id)}\r\n                    department={selectedDepartment}\r\n                />\r\n\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                        <Switch location={this.props.location}>\r\n                            <Route exact path=\"/staff\" component={HomePageStaffList} />\r\n                            <Route path=\"/staff/:staffId\" component={StaffWithId} />\r\n                            <Route exact path=\"/department\" component={() => <Department departments={this.props.departments} />} />\r\n                            <Route path=\"/department/:departmentId\" component={HomePageStaffInDepartment} />\r\n                            <Route path=\"/salary\" component={() => <Salary staffsSalary={this.props.staffsSalary}/>} />\r\n                            <Redirect to=\"/staff\" />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Staffs = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        staffs: []\r\n    }, action) => {\r\n        switch (action.type) {\r\n            case ActionTypes.ADD_STAFF:\r\n                var staff = action.payload;\r\n                return {...state, isLoading: false, errMess: null, staffs: state.staffs.concat(staff)}\r\n                \r\n            case ActionTypes.DELETE_STAFF:\r\n                return {...state, isLoading: false, errMess: null, staffs: action.payload}\r\n\r\n            case ActionTypes.UPDATE_STAFF:\r\n                return {...state, isLoading: false, errMess: null, staffs: action.payload}\r\n\r\n            case ActionTypes.ADD_STAFFS:\r\n                return {...state, isLoading: false, errMess: null, staffs: action.payload}\r\n\r\n            case ActionTypes.STAFFS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, staffs: []}\r\n\r\n            case ActionTypes.STAFFS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","import * as ActionType from './ActionTypes'\r\n\r\nexport const Departments = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        departments: []\r\n    }, action) => {\r\n        switch (action.type) {\r\n            case ActionType.ADD_DEPARTMENTS:\r\n                return {...state, isLoading: false, errMess: null, departments: action.payload}\r\n                \r\n            case ActionType.DEPARTMENTS_LOADING:\r\n                return {...state, isLoading: true, errMess: null, departments: []}\r\n\r\n            case ActionType.DEPARTMENTS_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","export const InitialStaffInfor = {\r\n    name: '',\r\n    doB: '',\r\n    salaryScale: '',\r\n    startDate: '',\r\n    department: '',\r\n    annualLeave: '',\r\n    overTime: '',\r\n};","import * as ActionType from './ActionTypes'\r\n\r\nexport const StaffsSalary = (state = {\r\n        isLoading: true,\r\n        errMess: null,\r\n        staffsSalary: []\r\n    }, action) => {\r\n        switch (action.type) {\r\n            case ActionType.ADD_STAFFSSALARY:\r\n                return {...state, isLoading: false, errMess: null, staffsSalary: action.payload}\r\n                \r\n            case ActionType.STAFFSSALARY_LOADING:\r\n                return {...state, isLoading: true, errMess: null, staffsSalary: []}\r\n\r\n            case ActionType.STAFFSSALARY_FAILED:\r\n                return {...state, isLoading: false, errMess: action.payload}\r\n\r\n            default:\r\n                return state;\r\n        }\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { BrowserRouter} from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn (\r\n            <Provider store={store}>\r\n                <BrowserRouter>\r\n                    <div className='App'>\r\n                        <Main />\r\n                    </div>\r\n                </BrowserRouter>\r\n            </Provider>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport { Staffs } from './staffs';\r\nimport { Departments } from './departments';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialStaffInfor } from './form';\r\nimport { StaffsSalary } from './staffsSalary';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            staffs: Staffs,\r\n            departments: Departments,\r\n            staffsSalary: StaffsSalary,\r\n            ...createForms({\r\n                staffinfor: InitialStaffInfor\r\n            }),\r\n            ...createForms({\r\n                staffmodifyform: InitialStaffInfor\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n\t<App />,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}